-- In this example a 3x3 mattrix a and its asscociated column vector b are solved for  x
-- then the result x is checked with matrixMultiply.hs ( mmult a x )
-- Note that the date has to be recopied as loading a new program wipes out the data 
-- stored in a and b


$ ghci
GHCi, version 8.8.4: https://www.haskell.org/ghc/  :? for help
Loaded package environment from /home/cleetus/.ghc/x86_64-linux-8.8.4/environments/default
Prelude> :l gaussElim.hs
[1 of 1] Compiling Main             ( gaussElim.hs, interpreted )
Ok, one module loaded.
*Main> :{
*Main| a = [[1,2,3],
*Main|   [4,5,6],
*Main|   [7,8,10]]
*Main| :}
*Main> a
[[1,2,3],[4,5,6],[7,8,10]]
*Main> b = [[1],[2],[6]]
*Main> gauss a b 
[[2.6666666666666665],[-5.333333333333333],[3.0]]
*Main> :l matrixMultiply.hs
[1 of 1] Compiling Main             ( matrixMultiply.hs, interpreted )
Ok, one module loaded.
*Main> :{
*Main| a = [[1,2,3],
*Main|   [4,5,6],
*Main|   [7,8,10]]
*Main| :}
*Main> x = [[2.6666666666666665],[-5.333333333333333],[3.0]]
*Main> mmult a x
[[1.0],[2.0000000000000018],[6.0]]
*Main> 
